#!/bin/bash

# Adapted from Zortax' example https://github.com/Zortax/dotfiles/blob/master/install.sh
# By: Jacob Bechmann Pedersen
# Date: 2019-06-15
# License: MIT (See LICENSE)

USER=$(whoami)
INSTALL_PATH=$(pwd)
USER_PATH="$HOME"

# Declare PROFILE PATH as an array:
declare -a PROFILE_PATH

# Function to pick the submodules:

ask() {
	while true; do
		if [ "${2:-}" = "Y" ]; then
			prompt="Y/n"
			default=Y
		elif [ "${2:-}" = "N" ]; then
			prompt="y/N"
			default=N
		else
			prompt="y/n"
			default=
		fi
		read -p "$1 [$prompt] " REPLY </dev/tty
		if [ -z "$REPLY" ]; then
			REPLY=$default
		fi
		case "$REPLY" in
			Y*|y*) return 0 ;;
			N*|n*) return 1 ;;
		esac
	done
}

# Install the scripts:

# manga
if ask "Install manga scripts?" Y; then
	PROFILE_PATH+=("$USER_PATH/.scripts/manga/")
	if [ ! -d "$USER_PATH/.scripts/" ]; then
		mkdir "$USER_PATH/.scripts/"
	fi
	if [ -d "$USER_PATH/.scripts/manga/" ]; then
		diff -r "$USER_PATH/.scripts/manga/" "$INSTALL_PATH/manga" >/dev/null 2>&1
		retval=$?
		if [ $retval -eq 0 ]; then
			echo "manga scripts already installed!"
		else
			echo "Backup up old manga scripts..."
			mv "$USER_PATH/.scripts/manga/" "$USER_PATH/.scripts/manga.bak"
			echo "Installing manga scripts..."
			cp -r "$INSTALL_PATH/manga" "$USER_PATH/.scripts/manga"
		fi
	else
		echo "Installing manga scripts..."
		cp -r "$INSTALL_PATH/manga" "$USER_PATH/.scripts/manga"
	fi
fi

# pictures
if ask "Install pictures scripts?" Y; then
	PROFILE_PATH+=("$USER_PATH/.scripts/pictures/")
	if [ ! -d "$USER_PATH/.scripts/" ]; then
		mkdir "$USER_PATH/.scripts/"
	fi
	if [ -d "$USER_PATH/.scripts/pictures/" ]; then
		diff -r "$USER_PATH/.scripts/pictures/" "$INSTALL_PATH/pictures" >/dev/null 2>&1
		retval=$?
		if [ $retval -eq 0 ]; then
			echo "pictures scripts already installed!"
		else
			echo "Backup up old pictures scripts..."
			mv "$USER_PATH/.scripts/pictures/" "$USER_PATH/.scripts/pictures.bak"
			echo "Installing pictures scripts..."
			cp -r "$INSTALL_PATH/pictures" "$USER_PATH/.scripts/pictures"
		fi
	else
		echo "Installing pictures scripts..."
		cp -r "$INSTALL_PATH/pictures" "$USER_PATH/.scripts/pictures"
	fi
fi


# videos
if ask "Install videos scripts?" Y; then
	PROFILE_PATH+=("$USER_PATH/.scripts/videos/")
	if [ ! -d "$USER_PATH/.scripts/" ]; then
		mkdir "$USER_PATH/.scripts/"
	fi
	if [ -d "$USER_PATH/.scripts/videos/" ]; then
		diff -r "$USER_PATH/.scripts/videos/" "$INSTALL_PATH/videos" >/dev/null 2>&1
		retval=$?
		if [ $retval -eq 0 ]; then
			echo "videos scripts already installed!"
		else
			echo "Backup up old videos scripts..."
			mv "$USER_PATH/.scripts/videos/" "$USER_PATH/.scripts/videos.bak"
			echo "Installing videos scripts..."
			cp -r "$INSTALL_PATH/videos" "$USER_PATH/.scripts/videos"
		fi
	else
		echo "Installing videos scripts..."
		cp -r "$INSTALL_PATH/videos" "$USER_PATH/.scripts/videos"
	fi
fi

# misc
if ask "Install misc scripts?" Y; then
	PROFILE_PATH+=("$USER_PATH/.scripts/misc/")
	if [ ! -d "$USER_PATH/.scripts/" ]; then
		mkdir "$USER_PATH/.scripts/"
	fi
	if [ -d "$USER_PATH/.scripts/misc/" ]; then
		diff -r "$USER_PATH/.scripts/misc/" "$INSTALL_PATH/misc" >/dev/null 2>&1
		retval=$?
		if [ $retval -eq 0 ]; then
			echo "misc scripts already installed!"
		else
			echo "Backup up old misc scripts..."
			mv "$USER_PATH/.scripts/misc/" "$USER_PATH/.scripts/misc.bak"
			echo "Installing misc scripts..."
			cp -r "$INSTALL_PATH/misc" "$USER_PATH/.scripts/misc"
		fi
	else
		echo "Installing misc scripts..."
		cp -r "$INSTALL_PATH/misc" "$USER_PATH/.scripts/misc"
	fi
fi

if ask "Update \$PATH in .profile?" Y; then
	if [ -f "$USER_PATH/.profile" ]; then
		echo "Backing up old .profile."
		cp "$USER_PATH/.profile" "$USER_PATH/.profile.bak"
	else
		touch "$USER_PATH/.profile"
	fi

	echo "Updating \$PATH in .profile..."
	# Check if the line for exporting PATH exists in .profile:
	grep -n "export PATH=" "$USER_PATH/.profile" > /dev/null 2>&1
	retval=$?
	if [ $retval -ne 0 ]; then
		echo "export PATH=\"\$PATH\"" >> "$USER_PATH/.profile"
	fi

	# For each entry in PROFILE_PATH, check if it is in the path:
	for i in "${!PROFILE_PATH[@]}"; do
		grep "export PATH=.*${PROFILE_PATH[$i]}" "$USER_PATH/.profile" > /dev/null 2>&1
		retval=$?
		# If it is not in the path, it must be added:
		if [ $retval -ne 0 ]; then
			echo "Adding ${PROFILE_PATH[$i]}..."
			pathappend=$(echo "${PROFILE_PATH[$i]}" | sed 's/\//\\\//g')
			sed "s/\(export PATH=\".*[^\"]\).*/\1\:${pathappend}\"/" "$USER_PATH/.profile" > /tmp/.profile
			cp /tmp/.profile "$USER_PATH/.profile"
		fi
	done
	
	if ask "Source .profile?" Y; then
		echo "Sourcing .profile..."
		source "$USER_PATH/.profile"
		echo "Done!"
	else
		echo "Sourcing of .profile must be done manually to be in effect!"
	fi
fi

echo "End of install!"
